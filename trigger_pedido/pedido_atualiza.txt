SET TERM ^ ;

CREATE OR ALTER trigger pe_at for pedido
active before update position 10
AS

DECLARE VARIABLE VCONTA INTEGER;
DECLARE VARIABLE VCONTROLALOTEVALIDADE VARCHAR(1);
DECLARE VARIABLE VGERARFLEX VARCHAR(1);
DECLARE VARIABLE VTIPODATABAIXA VARCHAR(1);
DECLARE VARIABLE VGERAMOVIMENTO VARCHAR(1);
DECLARE VARIABLE VTIPOCFOP INTEGER;
DECLARE VARIABLE VGERARESTOQUE VARCHAR(1);
DECLARE VARIABLE VGERARESTOQUEIMPROPRIO VARCHAR(1);
DECLARE VARIABLE VGERARCONSUMO VARCHAR(1);
DECLARE VARIABLE VGERARBONIFICACAO VARCHAR(1);
DECLARE VARIABLE VGERARTROCA VARCHAR(1);
DECLARE VARIABLE VZERARUNITARIO VARCHAR(1);
DECLARE VARIABLE VGERARFINANCEIRO VARCHAR(1);
DECLARE VARIABLE VGERARCAIXA VARCHAR(1);
DECLARE VARIABLE VCONTROLARLOTEVALIDADE VARCHAR(1);
DECLARE VARIABLE VBAIXAR VARCHAR(1);
DECLARE VARIABLE VDATABAIXA DATE;
DECLARE VARIABLE VHISTORICO INTEGER;
DECLARE VARIABLE VCODIGO INTEGER;
DECLARE VARIABLE VPRODUTO INTEGER;
DECLARE VARIABLE VQUANTIDADE FLOAT;
DECLARE VARIABLE VQUANTIDADEDEVOLVIDO FLOAT;
DECLARE VARIABLE VMOTIVODEVOLUCAO INTEGER;
DECLARE VARIABLE VUNITARIO FLOAT;
DECLARE VARIABLE VVALORVENDA FLOAT;
DECLARE VARIABLE VDESCONTO FLOAT;
DECLARE VARIABLE VCUSTO FLOAT;
DECLARE VARIABLE VORDEM VARCHAR(15);
DECLARE VARIABLE VVCTO DATE;
DECLARE VARIABLE VVALOR FLOAT;
DECLARE VARIABLE VDESPESA FLOAT;
DECLARE VARIABLE VGERACOMISSAO VARCHAR(1);
DECLARE VARIABLE VPERCCOMISSAO FLOAT;
DECLARE VARIABLE VPERC FLOAT;
DECLARE VARIABLE VVALORTOTAL FLOAT;
DECLARE VARIABLE VPERCCOMISSAOENTREGA FLOAT;
DECLARE VARIABLE VGERAFLEX VARCHAR(1);
DECLARE VARIABLE VITEM INTEGER;
DECLARE VARIABLE VVALIDADE DATE;
DECLARE VARIABLE VLOTE VARCHAR(15);
DECLARE VARIABLE VQTDE FLOAT;
DECLARE VARIABLE VFABRICACAO DATE;
DECLARE VARIABLE VVALORCOMISSAO FLOAT;
DECLARE VARIABLE VTABELAPRECO INTEGER;
DECLARE VARIABLE VCOMBO INTEGER;
DECLARE VARIABLE VCIDADE INTEGER;
DECLARE VARIABLE VIDITEMPEDIDO DOM_INT_NN;
DECLARE VARIABLE VINDICADORTIPOESTOQUE INTEGER;
DECLARE VARIABLE VFATURA VARCHAR(1);
DECLARE VARIABLE VLOCALORIGEM INTEGER;
DECLARE VARIABLE VLOCALDESTINO INTEGER;
BEGIN
	 /*VERSAO: 1.0.0.1 */	
     IF ((NEW.FATURADO = 'S') AND (OLD.FATURADO = 'N') AND (NEW.CANCELADO = 'N') AND (NEW.ATUALIZADO = 'N')) THEN
     BEGIN
        SELECT TIPOPEDIDO.GERARMOVIMENTO, TIPOPEDIDO.TIPOCFOP
        FROM TIPOPEDIDO WHERE TIPOPEDIDO.CODIGO = NEW.TIPOPEDIDO
        INTO :VGERAMOVIMENTO, :VTIPOCFOP;
        IF (:VGERAMOVIMENTO = 'S') THEN
        BEGIN
           NEW.ATUALIZADO = 'S';
           SELECT FILIAL.CONTA, FILIAL.CONTROLAFLEX, FILIAL.DATABAIXAAUTOMATICA, FILIAL.CONTROLALOTEVALIDADE
           FROM FILIAL WHERE FILIAL.CODIGO = NEW.FILIAL
           INTO :VCONTA, :VGERARFLEX, :VTIPODATABAIXA, :VCONTROLALOTEVALIDADE;
           SELECT TIPOCFOP.GERARCOMISSAO, TIPOCFOP.GERARESTOQUE, TIPOCFOP.GERARCONSUMO, TIPOCFOP.GERARTROCA, TIPOCFOP.ZERARUNITARIO ,TIPOCFOP.GERARFINANCEIRO,
           TIPOCFOP.GERARCAIXA, TIPOCFOP.HISTORICO, TIPOCFOP.GERARBONIFICACAO, TIPOCFOP.GERARFLEX, TIPOCFOP.GERARESTOQUEIMPROPRIO, TIPOCFOP.INDICADORTIPOESTOQUE,
           TIPOCFOP.FATURA, TIPOCFOP.LOCALORIGEM, TIPOCFOP.LOCALDESTINO
           FROM TIPOCFOP WHERE (TIPOCFOP.CODIGO = :VTIPOCFOP)
           INTO :VGERACOMISSAO, :VGERARESTOQUE, :VGERARCONSUMO, :VGERARTROCA, :VZERARUNITARIO, :VGERARFINANCEIRO, :VGERARCAIXA,
           :VHISTORICO, :VGERARBONIFICACAO, :VGERAFLEX, :VGERARESTOQUEIMPROPRIO, :VINDICADORTIPOESTOQUE, :VFATURA, VLOCALORIGEM, VLOCALDESTINO;
           IF (:VGERARFLEX = 'S') THEN
              IF (:VGERAFLEX = 'N') THEN
                VGERARFLEX = 'N';
           IF (:VGERACOMISSAO = 'S') THEN
           BEGIN
              SELECT FUNCIONARIO.GERARCOMISSAO FROM FUNCIONARIO
              WHERE FUNCIONARIO.CODIGO = NEW.FUNCIONARIO
              INTO :VGERACOMISSAO;
           END
           SELECT CLIFOR.CIDADE FROM CLIFOR
           WHERE CLIFOR.CODIGO = NEW.CLIFOR
           INTO :VCIDADE;
           IF (:VGERARTROCA = 'S') THEN
           BEGIN
              FOR
                  SELECT ITEMPEDIDORETORNO.PRODUTO, ITEMPEDIDORETORNO.QTDE, ITEMPEDIDORETORNO.UNITARIO
                  FROM ITEMPEDIDORETORNO WHERE (ITEMPEDIDORETORNO.NUMERO = NEW.NUMERO) AND (ITEMPEDIDORETORNO.FILIAL = NEW.FILIAL)
                  INTO :VPRODUTO,:VQUANTIDADE,:VUNITARIO
           DO
           BEGIN
                  SELECT ESTOQUE.VALORMEDIO
                  FROM ESTOQUE WHERE (ESTOQUE.PRODUTO = :VPRODUTO) AND (ESTOQUE.FILIAL = NEW.FILIAL)
                  INTO :VCUSTO;
                  IF (:VCUSTO = 0) THEN
                     SELECT ESTOQUE.VALORCUSTO / PRODUTO.QTDETROCA
                     FROM ESTOQUE
                     INNER JOIN PRODUTO ON ESTOQUE.PRODUTO  = PRODUTO.CODIGO
                     WHERE ESTOQUE.PRODUTO = :VPRODUTO AND ESTOQUE.FILIAL = NEW.FILIAL
                     INTO :VCUSTO;
                  IF (:VCUSTO = 0) THEN
                     SELECT ESTOQUE.VALORCUSTOTABELA / PRODUTO.QTDETROCA
                     FROM ESTOQUE
                     INNER JOIN PRODUTO ON ESTOQUE.PRODUTO  = PRODUTO.CODIGO
                     WHERE ESTOQUE.PRODUTO = :VPRODUTO AND ESTOQUE.FILIAL = NEW.FILIAL
                     INTO :VCUSTO;
                  INSERT INTO TROCA (TROCA.FILIAL, TROCA.TIPO, TROCA.DOCUMENTO, TROCA.PRODUTO, TROCA.DATA,  TROCA.QTDE,     TROCA.UNITARIO, TROCA.CLIFOR, TROCA.VENDEDOR,  TROCA.CUSTO, TROCA.TRANSPORTADOR)
                             VALUES (NEW.FILIAL,   'PE',       NEW.NUMERO,      :VPRODUTO,   NEW.ENTREGA, :VQUANTIDADE, :VUNITARIO,   NEW.CLIFOR,   NEW.FUNCIONARIO, :VCUSTO, NEW.TRANSPORTADOR);
              END
           END
           SELECT SUM(DESPESA.VALOR)
           FROM DESPESA WHERE DESPESA.FILIAL = NEW.FILIAL
           INTO :VDESPESA;
           IF (:VDESPESA IS NULL) THEN VDESPESA = 0;
           FOR
               SELECT ITEMPEDIDO.PRODUTO, ITEMPEDIDO.ITEM, ITEMPEDIDO.QTDE, ITEMPEDIDO.UNITARIO, ITEMPEDIDO.VALORDESCONTO,
               ITEMPEDIDO.QTDEDEVOLVIDO, ITEMPEDIDO.MOTIVODEVOLUCAO, ITEMPEDIDO.TOTAL,
               CASE WHEN (ITEMPEDIDO.TABELAPRECO IS NULL) THEN NEW.TABELAPRECO ELSE ITEMPEDIDO.TABELAPRECO END,
               ITEMPEDIDO.COMISSAO , ITEMPEDIDO.COMBO
               FROM ITEMPEDIDO WHERE (ITEMPEDIDO.NUMERO = NEW.NUMERO) AND (ITEMPEDIDO.FILIAL = NEW.FILIAL)
               INTO :VPRODUTO, :VITEM, :VQUANTIDADE, :VUNITARIO, :VDESCONTO, :VQUANTIDADEDEVOLVIDO, :VMOTIVODEVOLUCAO, :VVALORTOTAL, :VTABELAPRECO, :VPERCCOMISSAO, :VCOMBO
           DO
           BEGIN
               IF (:VGERARESTOQUE = 'S') THEN
               BEGIN
                  IF (:VCONTROLALOTEVALIDADE = 'S') THEN
                  BEGIN
                     SELECT ESTOQUE.CONTROLARLOTEVALIDADE
                     FROM ESTOQUE
                     WHERE ESTOQUE.FILIAL = NEW.FILIAL AND ESTOQUE.PRODUTO = :VPRODUTO
                     INTO :VCONTROLARLOTEVALIDADE;
                     IF (:VCONTROLARLOTEVALIDADE = 'S') THEN
                     BEGIN
                        FOR
                            SELECT VALIDADE, LOTE, QTDE, FABRICACAO
                            FROM PROCEDURE_SELECIONARLOTE(NEW.FILIAL, :VPRODUTO, :VQUANTIDADE, :VINDICADORTIPOESTOQUE,  NEW.CLIFOR)
                            INTO :VVALIDADE, :VLOTE, :VQTDE, :VFABRICACAO
                        DO
                        BEGIN
                           INSERT INTO VALIDADEITEMPEDIDO(VALIDADEITEMPEDIDO.NUMERO, VALIDADEITEMPEDIDO.FILIAL, VALIDADEITEMPEDIDO.PRODUTO, VALIDADEITEMPEDIDO.ITEM, VALIDADEITEMPEDIDO.LOTE, VALIDADEITEMPEDIDO.VALIDADE, VALIDADEITEMPEDIDO.QTDE, VALIDADEITEMPEDIDO.FABRICACAO)
                                                   VALUES(NEW.NUMERO,                NEW.FILIAL,                :VPRODUTO,                :VITEM,                :VLOTE,                :VVALIDADE,                :VQTDE,                :VFABRICACAO);
                           IF (:VLOCALDESTINO IS NOT NULL) THEN
                               INSERT INTO MOVIMENTOESTOQUE(MOVIMENTOESTOQUE.FILIAL, MOVIMENTOESTOQUE.PRODUTO, MOVIMENTOESTOQUE.QTDE, MOVIMENTOESTOQUE.VALIDADE, MOVIMENTOESTOQUE.LOTE, MOVIMENTOESTOQUE.TIPO, MOVIMENTOESTOQUE.OBS,              MOVIMENTOESTOQUE.FABRICACAO, MOVIMENTOESTOQUE.IMPROPRIO, MOVIMENTOESTOQUE.LOCAL)
                                                     VALUES(NEW.FILIAL,              :VPRODUTO,              CASE WHEN (:VFATURA = 'S') THEN (:VQTDE) ELSE (:VQTDE * -1) END,       :VVALIDADE,              :VLOTE,              'A-PE',                'PEDIDO ATUALIZADO:'||NEW.NUMERO, :VFABRICACAO, :VGERARESTOQUEIMPROPRIO, :VLOCALDESTINO);
                        
                           INSERT INTO MOVIMENTOESTOQUE(MOVIMENTOESTOQUE.FILIAL, MOVIMENTOESTOQUE.PRODUTO, MOVIMENTOESTOQUE.QTDE, MOVIMENTOESTOQUE.VALIDADE, MOVIMENTOESTOQUE.LOTE, MOVIMENTOESTOQUE.TIPO, MOVIMENTOESTOQUE.OBS,              MOVIMENTOESTOQUE.FABRICACAO, MOVIMENTOESTOQUE.IMPROPRIO, MOVIMENTOESTOQUE.LOCAL)
                                                 VALUES(NEW.FILIAL,              :VPRODUTO,              CASE WHEN (:VFATURA = 'S') THEN (:VQTDE * -1) ELSE (:VQTDE) END,       :VVALIDADE,              :VLOTE,              'A-PE',                'PEDIDO ATUALIZADO:'||NEW.NUMERO, :VFABRICACAO, :VGERARESTOQUEIMPROPRIO, :VLOCALORIGEM);
                        END
                     END ELSE
                     BEGIN
                         IF (:VLOCALDESTINO IS NOT NULL) THEN
                             INSERT INTO MOVIMENTOESTOQUE(MOVIMENTOESTOQUE.FILIAL, MOVIMENTOESTOQUE.PRODUTO, MOVIMENTOESTOQUE.QTDE, MOVIMENTOESTOQUE.TIPO, MOVIMENTOESTOQUE.OBS, MOVIMENTOESTOQUE.IMPROPRIO, MOVIMENTOESTOQUE.LOCAL)
                                                   VALUES(NEW.FILIAL,              :VPRODUTO,              CASE WHEN (:VFATURA = 'S') THEN (:VQUANTIDADE) ELSE (:VQUANTIDADE * -1) END, 'A-PE',                'PEDIDO ATUALIZADO:'||NEW.NUMERO, :VGERARESTOQUEIMPROPRIO, :VLOCALDESTINO);
                     
                         INSERT INTO MOVIMENTOESTOQUE(MOVIMENTOESTOQUE.FILIAL, MOVIMENTOESTOQUE.PRODUTO, MOVIMENTOESTOQUE.QTDE, MOVIMENTOESTOQUE.TIPO, MOVIMENTOESTOQUE.OBS, MOVIMENTOESTOQUE.IMPROPRIO, MOVIMENTOESTOQUE.LOCAL)
                                               VALUES(NEW.FILIAL,              :VPRODUTO,              CASE WHEN (:VFATURA = 'S') THEN (:VQUANTIDADE * -1) ELSE (:VQUANTIDADE) END, 'A-PE',                'PEDIDO ATUALIZADO:'||NEW.NUMERO, :VGERARESTOQUEIMPROPRIO, :VLOCALORIGEM);
                     END
                  END ELSE
                  BEGIN
                      IF (:VLOCALDESTINO IS NOT NULL) THEN
                          INSERT INTO MOVIMENTOESTOQUE(MOVIMENTOESTOQUE.FILIAL, MOVIMENTOESTOQUE.PRODUTO, MOVIMENTOESTOQUE.QTDE, MOVIMENTOESTOQUE.TIPO, MOVIMENTOESTOQUE.OBS, MOVIMENTOESTOQUE.IMPROPRIO, MOVIMENTOESTOQUE.LOCAL)
                                                VALUES(NEW.FILIAL,              :VPRODUTO,              CASE WHEN (:VFATURA = 'S') THEN (:VQUANTIDADE) ELSE (:VQUANTIDADE * -1) END,        'A-PE',         'PEDIDO ATUALIZADO:'||NEW.NUMERO, :VGERARESTOQUEIMPROPRIO, :VLOCALDESTINO);
                  
                      INSERT INTO MOVIMENTOESTOQUE(MOVIMENTOESTOQUE.FILIAL, MOVIMENTOESTOQUE.PRODUTO, MOVIMENTOESTOQUE.QTDE, MOVIMENTOESTOQUE.TIPO, MOVIMENTOESTOQUE.OBS, MOVIMENTOESTOQUE.IMPROPRIO, MOVIMENTOESTOQUE.LOCAL)
                                            VALUES(NEW.FILIAL,              :VPRODUTO,              CASE WHEN (:VFATURA = 'S') THEN (:VQUANTIDADE * -1) ELSE (:VQUANTIDADE) END,        'A-PE',         'PEDIDO ATUALIZADO:'||NEW.NUMERO, :VGERARESTOQUEIMPROPRIO, :VLOCALORIGEM);
                  END
               END
               IF ((:VGERARCONSUMO = 'S') AND (:VFATURA = 'S')) THEN
               BEGIN
                  SELECT CASE WHEN (FILIAL.UTILIZARCUSTOBRUTO = 'S') THEN ESTOQUE.VALORCUSTOBRUTO ELSE ESTOQUE.VALORMEDIO END
                    FROM ESTOQUE
                    INNER JOIN FILIAL ON FILIAL.CODIGO = ESTOQUE.FILIAL
                    WHERE ESTOQUE.PRODUTO = :VPRODUTO AND ESTOQUE.FILIAL = NEW.FILIAL
                    INTO :VCUSTO;
                  IF (:VCUSTO = 0) THEN
                     SELECT ESTOQUE.VALORCUSTO FROM ESTOQUE
                     WHERE ESTOQUE.PRODUTO = :VPRODUTO AND ESTOQUE.FILIAL = NEW.FILIAL
                     INTO :VCUSTO;
                  IF (:VCUSTO = 0) THEN
                     SELECT ESTOQUE.VALORCUSTOTABELA FROM ESTOQUE
                     WHERE ESTOQUE.PRODUTO = :VPRODUTO AND ESTOQUE.FILIAL = NEW.FILIAL
                     INTO :VCUSTO;
                  IF ((NEW.VALORDESCONTO > 0) AND (NEW.TOTALPRODUTO > 0)) THEN
                  BEGIN
                     VPERC = NEW.VALORDESCONTO / NEW.TOTALPRODUTO;
                     VDESCONTO = :VDESCONTO + (((:VUNITARIO * :VQUANTIDADE)- :VDESCONTO) * :VPERC);
                  END
                  IF ((NEW.VALORACRESCIMO > 0) AND (NEW.TOTALPRODUTO > 0)) THEN
                  BEGIN
                     VPERC = NEW.VALORACRESCIMO / NEW.TOTALPRODUTO;
                     VDESCONTO = :VDESCONTO - (((:VUNITARIO * :VQUANTIDADE)- :VDESCONTO) * VPERC);
                  END
                  SELECT ITEMTABELAPRECO.VALORVENDA FROM ITEMTABELAPRECO
                  WHERE ITEMTABELAPRECO.TABELAPRECO = NEW.TABELAPRECO AND ITEMTABELAPRECO.PRODUTO = :VPRODUTO
                  INTO :VVALORVENDA;
                  VPERC = 0;
                  IF (:VGERACOMISSAO = 'S') THEN
                  BEGIN
                      SELECT PROCEDURE_CALCULAR_COMISSAO.VALORCOMISSAO, PROCEDURE_CALCULAR_COMISSAO.PERCCOMISSAO
                      FROM PROCEDURE_CALCULAR_COMISSAO(NEW.FILIAL, :VTIPOCFOP, NEW.FUNCIONARIO, :VPRODUTO,
                      :VTABELAPRECO, NEW.CLIFOR, NEW.FORMAPAGAMENTO, NEW.CONDICAOPAGAMENTO,
                      :VQUANTIDADE, :VUNITARIO, :VVALORVENDA, :VDESCONTO, :VVALORTOTAL, NEW.COMISSAO, :VPERCCOMISSAO, :VCOMBO)
                      INTO :VVALORCOMISSAO, :VPERCCOMISSAO;
                  END ELSE
                  BEGIN
                      VPERCCOMISSAO = 0;
                      VVALORCOMISSAO = 0;
                  END
                  VPERCCOMISSAOENTREGA = 0;
                  /*Comissao entregas - Transportador*/
                  SELECT TRANSPORTADOR.COMISSAO FROM TRANSPORTADOR
                  WHERE TRANSPORTADOR.CODIGO = NEW.TRANSPORTADOR
                  INTO :VPERCCOMISSAOENTREGA;
                  IF (:VPERCCOMISSAOENTREGA IS NULL) THEN
                      VPERCCOMISSAOENTREGA = 0;
                  /*Comissao Entrega - Cidade*/
                  VPERC = 0;
                  SELECT CIDADE.COMISSAOENTREGA FROM CIDADE
                  WHERE CIDADE.CODIGO  = :VCIDADE INTO :VPERC;
                  IF (:VPERC IS NULL) THEN VPERC = 0;
                  VPERCCOMISSAOENTREGA = :VPERCCOMISSAOENTREGA + :VPERC;
                  /*Comissao de entrega por grupo*/
                  SELECT GRUPO.COMISSAOENTREGA FROM PRODUTO
                  INNER JOIN GRUPO ON GRUPO.CODIGO = PRODUTO.GRUPO
                  WHERE PRODUTO.CODIGO = :VPRODUTO
                  INTO :VPERC;
                  IF (:VPERC IS NULL) THEN VPERC = 0;
                  VPERCCOMISSAOENTREGA = :VPERCCOMISSAOENTREGA + :VPERC;
                  IF (:VGERARBONIFICACAO = 'S') THEN
                  BEGIN
                     INSERT INTO BONIFICACAO(BONIFICACAO.FILIAL, BONIFICACAO.TIPO, BONIFICACAO.DOCUMENTO, BONIFICACAO.PRODUTO, BONIFICACAO.DATA, BONIFICACAO.QTDE, BONIFICACAO.UNITARIO,          BONIFICACAO.CLIFOR, BONIFICACAO.VENDEDOR, BONIFICACAO.CUSTO)
                                      VALUES(NEW.FILIAL,         'PE',             NEW.NUMERO,            :VPRODUTO,         NEW.ENTREGA,      :VQUANTIDADE,   :VUNITARIO, NEW.CLIFOR,         NEW.FUNCIONARIO,      :VCUSTO);
                  END
                  IF (:VZERARUNITARIO = 'S') THEN
                  BEGIN
                      VUNITARIO = 0;
                      VDESCONTO = 0;
                      VPERCCOMISSAO = 0;
                  END
                  IF (:VGERARFLEX = 'S') THEN
                    IF (:VGERAFLEX = 'N') THEN
                        VGERARFLEX = 'N';
                        
                  INSERT INTO CONSUMO(CONSUMO.FILIAL, CONSUMO.TIPO, CONSUMO.DOCUMENTO, CONSUMO.PRODUTO, CONSUMO.DATA, CONSUMO.QTDE,   CONSUMO.UNITARIO, CONSUMO.VALORDESCONTO, CONSUMO.CUSTO, CONSUMO.DESPESA,                                                       CONSUMO.COMISSAO,                                                            CONSUMO.CLIFOR, CONSUMO.VENDEDOR, CONSUMO.QTDEDEVOLVIDO,   CONSUMO.MOTIVODEVOLUCAO, CONSUMO.TRANSPORTADOR, CONSUMO.VALORVENDA, CONSUMO.GERARFLEX, CONSUMO.TABELAPRECO, CONSUMO.FORMAPAGAMENTO, CONSUMO.CONDICAOPAGAMENTO, CONSUMO.COMISSAOENTREGA, CONSUMO.COMBO)
                               VALUES(NEW.FILIAL,     'PE',         NEW.NUMERO,        :VPRODUTO,     NEW.ENTREGA,  :VQUANTIDADE, :VUNITARIO,     :VDESCONTO,          :VCUSTO,     (((:VUNITARIO * :VQUANTIDADE) - :VDESCONTO )*(:VDESPESA/100)), :VVALORCOMISSAO, NEW.CLIFOR,     NEW.FUNCIONARIO,  :VQUANTIDADEDEVOLVIDO, :VMOTIVODEVOLUCAO,     NEW.TRANSPORTADOR,     :VVALORVENDA,     :VGERARFLEX,     :VTABELAPRECO,     NEW.FORMAPAGAMENTO,     NEW.CONDICAOPAGAMENTO,     (((:VUNITARIO * :VQUANTIDADE) - :VDESCONTO) * (:VPERCCOMISSAOENTREGA/100)), :VCOMBO);
               END
           END
              /*Monitora Estoque*/
              FOR
                SELECT ITEMPEDIDO.ID
                FROM ITEMPEDIDO
                WHERE ITEMPEDIDO.IDPEDIDO = NEW.ID
                INTO :VIDITEMPEDIDO
            DO BEGIN
                DELETE FROM MONITORARESTOQUE
                WHERE MONITORARESTOQUE.IDITEMPEDIDO = :VIDITEMPEDIDO;
            END          
           IF (:VGERARFINANCEIRO = 'S') THEN
           BEGIN
              FOR
                 SELECT ORDEMPEDIDO.ORDEM, ORDEMPEDIDO.VCTO, ORDEMPEDIDO.VALOR
                 FROM ORDEMPEDIDO WHERE (ORDEMPEDIDO.NUMERO = NEW.NUMERO) AND (ORDEMPEDIDO.FILIAL = NEW.FILIAL)
                 ORDER BY ORDEMPEDIDO.VCTO DESC
                 INTO :VORDEM, :VVCTO,:VVALOR
              DO
              BEGIN
                 VPERCCOMISSAO = NEW.COMISSAO;
                 SELECT FORMAPAGAMENTO.BAIXAR FROM FORMAPAGAMENTO
                 WHERE FORMAPAGAMENTO.CODIGO = NEW.FORMAPAGAMENTO INTO :VBAIXAR;
                 IF (:VBAIXAR = 'S') THEN
                 BEGIN
                    IF (:VTIPODATABAIXA = 'E') THEN
                    BEGIN
                       VDATABAIXA = NEW.EMISSAO;
                    END ELSE
                    BEGIN
                        VDATABAIXA = :VVCTO;
                    END
                    IF (:VGERARCAIXA = 'N') THEN
                    BEGIN
                       INSERT INTO FINANCEIRO (CLIFOR,     ORDEM,     VALOR,     DATAEMISSAO, DATAVCTO, DATABAIXA,     VALORBAIXA, DOCUMENTO,  TIPO, FORMAPAGAMENTO,     FILIAL,     HISTORICO,     CONTA,     VENDEDOR)
                                       VALUES (NEW.CLIFOR, :VORDEM, :VVALOR, NEW.ENTREGA, :VVCTO, :VDATABAIXA, :VVALOR,  NEW.NUMERO, CASE WHEN (:VFATURA = 'S') THEN 'C' ELSE 'D' END,  NEW.FORMAPAGAMENTO, NEW.FILIAL, :VHISTORICO, :VCONTA, NEW.FUNCIONARIO);
                    END
                    IF (:VGERARCAIXA = 'S') THEN
                    BEGIN
                       VCODIGO = GEN_ID(GENERATOR_CAIXA, 1);
                       INSERT INTO CAIXA (CODIGO,     DATA,       CONTA,     HISTORICO,     COMPLEMENTO, VALOR)
                                  VALUES (:VCODIGO, NEW.EMISSAO,:VCONTA, :VHISTORICO, :VORDEM,   :VVALOR);
                       INSERT INTO FINANCEIRO (CLIFOR,     ORDEM,     VALOR,     DATAEMISSAO, DATAVCTO, DATABAIXA,     VALORBAIXA, DOCUMENTO,  TIPO, CAIXA,      FORMAPAGAMENTO,     FILIAL,     HISTORICO,     CONTA,     VENDEDOR, COMISSAO)
                                       VALUES (NEW.CLIFOR, :VORDEM, :VVALOR, NEW.ENTREGA, :VVCTO, :VDATABAIXA, :VVALOR,  NEW.NUMERO, CASE WHEN (:VFATURA = 'S') THEN 'C' ELSE 'D' END,  :VCODIGO, NEW.FORMAPAGAMENTO, NEW.FILIAL, :VHISTORICO, :VCONTA, NEW.FUNCIONARIO, :VPERCCOMISSAO);
                      END
                  END ELSE
                  BEGIN
                     IF (NEW.EMISSAO <> :VVCTO) THEN
                     BEGIN
                        INSERT INTO FINANCEIRO (CLIFOR,     ORDEM,     VALOR,     DATAEMISSAO, DATAVCTO, DOCUMENTO,  TIPO, FORMAPAGAMENTO,     FILIAL,     HISTORICO,     CONTA,     VENDEDOR, COMISSAO)
                                        VALUES (NEW.CLIFOR, :VORDEM, :VVALOR, NEW.ENTREGA, :VVCTO, NEW.NUMERO, CASE WHEN (:VFATURA = 'S') THEN 'C' ELSE 'D' END,  NEW.FORMAPAGAMENTO, NEW.FILIAL, :VHISTORICO, :VCONTA, NEW.FUNCIONARIO, :VPERCCOMISSAO);
                     END ELSE
                     IF (NEW.EMISSAO = :VVCTO) THEN
                     BEGIN
                        IF (:VGERARCAIXA = 'N') THEN
                        BEGIN
                           INSERT INTO FINANCEIRO (CLIFOR,     ORDEM,     VALOR,     DATAEMISSAO, DATAVCTO, DATABAIXA, VALORBAIXA, DOCUMENTO,  TIPO, FORMAPAGAMENTO,     FILIAL,     HISTORICO,     CONTA,     VENDEDOR, COMISSAO)
                                           VALUES (NEW.CLIFOR, :VORDEM, :VVALOR, NEW.ENTREGA, :VVCTO, :VVCTO,  :VVALOR,  NEW.NUMERO, CASE WHEN (:VFATURA = 'S') THEN 'C' ELSE 'D' END,  NEW.FORMAPAGAMENTO, NEW.FILIAL, :VHISTORICO, :VCONTA, NEW.FUNCIONARIO, :VPERCCOMISSAO);
                        END ELSE
                        IF (:VGERARCAIXA = 'S') THEN
                        BEGIN
                           VCODIGO = GEN_ID(GENERATOR_CAIXA, 1);
                           INSERT INTO CAIXA (CODIGO,     DATA,     CONTA,     HISTORICO,     COMPLEMENTO, VALOR)
                                      VALUES (:VCODIGO, :VVCTO, :VCONTA, :VHISTORICO, :VORDEM,   :VVALOR);
                           INSERT INTO FINANCEIRO (CLIFOR,     ORDEM,     VALOR,     DATAEMISSAO, DATAVCTO, DATABAIXA, VALORBAIXA, DOCUMENTO,  TIPO, CAIXA,      FORMAPAGAMENTO,     FILIAL,     HISTORICO,     CONTA,     VENDEDOR, COMISSAO)
                                           VALUES (NEW.CLIFOR, :VORDEM, :VVALOR, NEW.ENTREGA, :VVCTO, :VVCTO,  :VVALOR,  NEW.NUMERO, CASE WHEN (:VFATURA = 'S') THEN 'C' ELSE 'D' END,  :VCODIGO, NEW.FORMAPAGAMENTO, NEW.FILIAL, :VHISTORICO, :VCONTA, NEW.FUNCIONARIO, :VPERCCOMISSAO);
                      END
                    END
                  END
              END
           END
        END
     END
END^

SET TERM ; ^

