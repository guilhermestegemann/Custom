CREATE TABLE METAMARCA (
    ID DOM_ID,
    META DOM_ID,
    MARCA DOM_ID,
    VALOR DOM_NUM_2D_NN,
    QUANTIDADE DOM_NUM_3D_NN,
    PESOBRUTO DOM_NUM_3D_NN,
    VOLUME DOM_INT_NN,
    POSITIVACAO DOM_INT_NN);

CREATE SEQUENCE GEN_METAMARCA_ID;

SET TERM ^ ;

CREATE TRIGGER TRIMETAMARCA_BI FOR METAMARCA
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.ID IS NULL) THEN
    NEW.ID = GEN_ID(GEN_METAMARCA_ID,1);
END^

SET TERM ; ^

ALTER TABLE METAMARCA
ADD CONSTRAINT FK_METAMARCA_META
FOREIGN KEY (META)
REFERENCES META(ID);

ALTER TABLE METAMARCA
ADD CONSTRAINT FK_METAMARCA_MARCA
FOREIGN KEY (MARCA)
REFERENCES MARCA(ID);

ALTER TABLE METAMARCA
ADD CONSTRAINT PK_METAMARCA
PRIMARY KEY (ID);

ALTER TABLE METAMARCA
ADD CONSTRAINT UNQ_METAMARCA
UNIQUE (META,MARCA);

SET TERM ^ ;

CREATE OR ALTER procedure set_bi_metamarca (
    distribuidor dom_str_18_nn,
    meta dom_id,
    marca dom_id,
    valor dom_num_2d_nn,
    quantidade dom_num_3d_nn,
    pesobruto dom_num_3d_nn,
    volume dom_int_nn,
    positivacao dom_int_nn)
returns (
    id dom_id)
as
declare variable iddistribuidor dom_id_isn;
declare variable idmeta dom_id_isn;
BEGIN
    SELECT ID FROM GET_DISTRIBUIDOR(:DISTRIBUIDOR) INTO :IDDISTRIBUIDOR;
    IF (:IDDISTRIBUIDOR IS NULL) THEN
        EXCEPTION EXCEPTION_DISTRIBUIDORINVALIDO;

    SELECT ID FROM GET_META(:IDDISTRIBUIDOR, :META) INTO :IDMETA;
    IF (:IDMETA IS NULL) THEN
        EXCEPTION EXCEPTION_METAINVALIDA;

    UPDATE OR INSERT INTO METAMARCA(META, MARCA, VALOR, QUANTIDADE, PESOBRUTO, VOLUME, POSITIVACAO)
    VALUES (:IDMETA, :MARCA, :VALOR, :QUANTIDADE, :PESOBRUTO, :VOLUME, :POSITIVACAO)
    MATCHING (META, MARCA)
    RETURNING ID INTO :ID;

    SUSPEND;
END^

SET TERM ; ^

SET TERM ^ ;

CREATE OR ALTER procedure del_bi_metamarca (
    meta dom_id_isn,
    distribuidor dom_str_18_nn,
    marca dom_id)
as
declare variable iddistribuidor dom_id_isn;
declare variable idmeta dom_id_isn;
BEGIN
    SELECT ID FROM GET_DISTRIBUIDOR(:DISTRIBUIDOR) INTO :IDDISTRIBUIDOR;
    IF (:IDDISTRIBUIDOR IS NULL) THEN
        EXCEPTION EXCEPTION_DISTRIBUIDORINVALIDO;

    SELECT ID FROM GET_META(:IDDISTRIBUIDOR, :META) INTO :IDMETA;
    IF (:IDMETA IS NULL) THEN
        EXCEPTION EXCEPTION_METAINVALIDA;

    DELETE FROM METAMARCA
    WHERE METAMARCA.META = :IDMETA
    AND METAMARCA.MARCA = :MARCA;
END^

SET TERM ; ^


