SET TERM ^ ;

CREATE OR ALTER trigger trigger_cancelarnf for nf
active before update position 2
AS
/*Configuracao*/
DECLARE VARIABLE VARGERARESTOQUE VARCHAR(1);
DECLARE VARIABLE VARGERARCONSUMO VARCHAR(1);
DECLARE VARIABLE VARGERARBONIFICACAO VARCHAR(1);
DECLARE VARIABLE VARGERARTROCA VARCHAR(1);
DECLARE VARIABLE VARGERARFINANCEIRO VARCHAR(1);
DECLARE VARIABLE VARGERARCAIXA VARCHAR(1);
DECLARE VARIABLE VARGERARESTOQUEIMPROPRIO VARCHAR(1);
DECLARE VARIABLE VARUTILIZAFIDELIZACAO VARCHAR(1);
DECLARE VARIABLE VARGERARFIDELIZACAO VARCHAR(1);
/*TipoCFOP*/
DECLARE VARIABLE VARFATURA VARCHAR(1);
DECLARE VARIABLE VARTIPOCFOPGERARDEVOLUCAO VARCHAR(1);
DECLARE VARIABLE VARINDICADORTIPOESTOQUE INTEGER;
DECLARE VARIABLE VARLOCALORIGEM INTEGER;
DECLARE VARIABLE VARLOCALDESTINO INTEGER;
/*Financeiro*/
DECLARE VARIABLE VARORDEM VARCHAR(20);
DECLARE VARIABLE VARCAIXA INTEGER;
DECLARE VARIABLE VARREGISTRO INTEGER;
DECLARE VARIABLE VARDATAEMISSAO DATE;
/*Estoque*/
DECLARE VARIABLE VARPRODUTO INTEGER;
DECLARE VARIABLE VARQUANTIDADE NUMERIC(15,3);
/*Filial*/
DECLARE VARIABLE VARBLOQUEARCANCELAR VARCHAR(1);
DECLARE VARIABLE VARCONTROLALOTEVALIDADE VARCHAR(1);
/*Produto*/
DECLARE VARIABLE VARCONTROLARLOTEVALIDADE VARCHAR(1);
/*Lote*/
DECLARE VARIABLE VARITEM INTEGER;
DECLARE VARIABLE VARLOTE VARCHAR(15);
DECLARE VARIABLE VARVALIDADE DATE;
DECLARE VARIABLE VARQTDE NUMERIC(15,3);
DECLARE VARIABLE VARFABRICACAO DATE;
/*Cancelar Devolucao*/
DECLARE VARIABLE VARMOTIVODEVOLUCAO INTEGER;
DECLARE VARIABLE VARNUMERO INTEGER;
DECLARE VARIABLE VARSERIE VARCHAR(5);
DECLARE VARIABLE VARFILIAL INTEGER;
DECLARE VARIABLE VARCLIFOR INTEGER;
DECLARE VARIABLE VARNFORIGEM VARCHAR(1);
DECLARE VARIABLE VARORIGEM VARCHAR(1);
DECLARE VARIABLE VARNFREFERENCIADA INTEGER;

BEGIN
    IF (NEW.CANCELADA <> OLD.CANCELADA) THEN BEGIN
        IF (NEW.CANCELADA = 'S') THEN
            NEW.DATACANCELAMENTO = CURRENT_DATE;
       IF ((NEW.ATUALIZADA = 'S') AND (NEW.CANCELADA = 'S')) THEN BEGIN
          SELECT TIPOCFOP.FATURA, TIPOCFOP.DEVOLUCAO, TIPOCFOP.INDICADORTIPOESTOQUE, TIPOCFOP.LOCALORIGEM, TIPOCFOP.LOCALDESTINO
          FROM TIPOCFOP
          WHERE TIPOCFOP.CODIGO = NEW.TIPOCFOP
          INTO :VARFATURA, :VARTIPOCFOPGERARDEVOLUCAO, :VARINDICADORTIPOESTOQUE, :VARLOCALORIGEM, :VARLOCALDESTINO;
          IF (:VARFATURA = 'S') THEN BEGIN
             SELECT FILIAL.BLOQUEARCANCELARBAIXADO, FILIAL.CONTROLALOTEVALIDADE, FILIAL.UTILIZAFIDELIZACAO
             FROM FILIAL WHERE FILIAL.CODIGO = NEW.FILIAL
             INTO :VARBLOQUEARCANCELAR, :VARCONTROLALOTEVALIDADE, :VARUTILIZAFIDELIZACAO;
             IF (:VARBLOQUEARCANCELAR = 'S') THEN BEGIN
                SELECT COUNT(*) FROM FINANCEIRO
                WHERE FINANCEIRO.CLIFOR = NEW.CLIFOR
                AND FINANCEIRO.FILIAL = NEW.FILIAL
                AND FINANCEIRO.ORDEM IN (SELECT ORDEMNF.ORDEM FROM ORDEMNF
                WHERE ORDEMNF.NUMERO = NEW.NUMERO AND ORDEMNF.FILIAL = NEW.FILIAL
                AND ORDEMNF.ORIGEM = NEW.ORIGEM AND ORDEMNF.CLIFOR = NEW.CLIFOR)
                INTO :VARREGISTRO;
                IF (:VARREGISTRO > 0) THEN BEGIN
                   SELECT COUNT(*) FROM FINANCEIRO
                   WHERE FINANCEIRO.CLIFOR = NEW.CLIFOR
                   AND FINANCEIRO.FILIAL = NEW.FILIAL
                   AND FINANCEIRO.DATAEMISSAO = NEW.EMISSAO
                   AND FINANCEIRO.DATABAIXA IS NOT NULL
                   AND FINANCEIRO.ORDEM IN (SELECT ORDEMNF.ORDEM FROM ORDEMNF
                   WHERE ORDEMNF.NUMERO = NEW.NUMERO AND ORDEMNF.FILIAL = NEW.FILIAL
                   AND ORDEMNF.ORIGEM = NEW.ORIGEM AND ORDEMNF.CLIFOR = NEW.CLIFOR)
                   INTO :VARREGISTRO;
                   IF (:VARREGISTRO > 0) THEN
                       EXCEPTION EXCEPTION_CANCELARBAIXADO;
                END
             END
             NEW.ATUALIZADA = 'N';
             SELECT TIPOCFOP.GERARESTOQUE, TIPOCFOP.GERARCONSUMO, TIPOCFOP.GERARTROCA,
             TIPOCFOP.GERARFINANCEIRO, TIPOCFOP.GERARCAIXA, TIPOCFOP.FATURA, TIPOCFOP.GERARBONIFICACAO,
             TIPOCFOP.GERARESTOQUEIMPROPRIO, TIPOCFOP.GERARFIDELIZACAO
             FROM TIPOCFOP WHERE TIPOCFOP.CODIGO = NEW.TIPOCFOP
             INTO :VARGERARESTOQUE, :VARGERARCONSUMO, :VARGERARTROCA, :VARGERARFINANCEIRO, :VARGERARCAIXA,
             :VARFATURA,:VARGERARBONIFICACAO, :VARGERARESTOQUEIMPROPRIO, :VARGERARFIDELIZACAO;
             IF ((:VARUTILIZAFIDELIZACAO = 'S') AND (:VARGERARFIDELIZACAO <> 'N')) THEN BEGIN
                DELETE FROM FIDELIZACAODOCUMENTO
                WHERE FIDELIZACAODOCUMENTO.TIPO = 'NF'
                AND FIDELIZACAODOCUMENTO.NFNUMERO = NEW.NUMERO
                AND FIDELIZACAODOCUMENTO.NFSERIE = NEW.SERIE
                AND FIDELIZACAODOCUMENTO.NFFILIAL = NEW.FILIAL
                AND FIDELIZACAODOCUMENTO.NFORIGEM = NEW.ORIGEM
                AND FIDELIZACAODOCUMENTO.NFCLIFOR = NEW.CLIFOR;
             END
             IF (:VARGERARTROCA = 'S') THEN BEGIN
                DELETE FROM TROCA
                WHERE TROCA.FILIAL = NEW.FILIAL AND TROCA.TIPO = 'NF'
                AND TROCA.DOCUMENTO = NEW.NUMERO AND TROCA.CLIFOR = NEW.CLIFOR;
             END
             IF (:VARGERARBONIFICACAO = 'S') THEN BEGIN
                DELETE FROM BONIFICACAO
                WHERE BONIFICACAO.FILIAL = NEW.FILIAL AND BONIFICACAO.TIPO = 'NF'
                AND BONIFICACAO.DOCUMENTO = NEW.NUMERO AND BONIFICACAO.CLIFOR = NEW.CLIFOR;
             END
             IF (:VARGERARCONSUMO = 'S') THEN BEGIN
                DELETE FROM CONSUMO
                WHERE CONSUMO.FILIAL =NEW.FILIAL AND CONSUMO.TIPO = 'NF'
                AND CONSUMO.DOCUMENTO = NEW.NUMERO AND CONSUMO.CLIFOR = NEW.CLIFOR;
             END
             SELECT NFREFERENCIADA.CODIGO, NFREFERENCIADA.MOTIVODEVOLUCAO, NFREFERENCIADA.NUMERO, NFREFERENCIADA.SERIE, NFREFERENCIADA.FILIAL, NFREFERENCIADA.CLIFOR, NFREFERENCIADA.ORIGEM
             FROM NFREFERENCIADA
             WHERE NFREFERENCIADA.NFNUMERO = NEW.NUMERO
             AND NFREFERENCIADA.NFSERIE = NEW.SERIE
             AND NFREFERENCIADA.NFFILIAL = NEW.FILIAL
             AND NFREFERENCIADA.NFORIGEM = NEW.ORIGEM
             AND NFREFERENCIADA.NFCLIFOR = NEW.CLIFOR
             INTO :VARNFREFERENCIADA, :VARMOTIVODEVOLUCAO, :VARNUMERO, :VARSERIE, :VARFILIAL, :VARCLIFOR, :VARORIGEM;
             IF ((NOT(:VARMOTIVODEVOLUCAO IS NULL)) AND (:VARTIPOCFOPGERARDEVOLUCAO = 'S') AND (:VARGERARESTOQUE = 'S')) THEN BEGIN
                UPDATE NF
                SET NF.DEVOLVIDA = 'N', NF.MOTIVODEVOLUCAO = NULL
                WHERE NF.NUMERO = :VARNUMERO
                AND NF.SERIE = :VARSERIE
                AND NF.FILIAL = :VARFILIAL
                AND NF.CLIFOR = :VARCLIFOR;
                --Cancelar devolucao do item
                FOR
                    SELECT ITEMNF.PRODUTO, ITEMNF.ITEM
                    FROM ITEMNF
                    WHERE ITEMNF.NUMERO = NEW.NUMERO
                    AND ITEMNF.SERIE = NEW.SERIE
                    AND ITEMNF.FILIAL = NEW.FILIAL
                    AND ITEMNF.CLIFOR = NEW.CLIFOR
                    INTO :VARPRODUTO, :VARITEM
                DO BEGIN
                    RDB$SET_CONTEXT('USER_TRANSACTION', 'NFREFERENCIADA', :VARNFREFERENCIADA);
                    UPDATE ITEMNFDEVOLUCAO
                        SET ITEMNFDEVOLUCAO.CANCELADO = 'S'
                    WHERE ITEMNFDEVOLUCAO.NUMERO = :VARNUMERO
                        AND ITEMNFDEVOLUCAO.SERIE = :VARSERIE
                        AND ITEMNFDEVOLUCAO.FILIAL = :VARFILIAL
                        AND ITEMNFDEVOLUCAO.ORIGEM = :VARORIGEM
                        AND ITEMNFDEVOLUCAO.CLIFOR = :VARCLIFOR
                        AND ITEMNFDEVOLUCAO.PRODUTO = :VARPRODUTO
                        AND ITEMNFDEVOLUCAO.ITEM = :VARITEM
                        AND ITEMNFDEVOLUCAO.NFREFERENCIADA = :VARNFREFERENCIADA;
                END
             END
             VARNFORIGEM = 'A';
             SELECT NF.ORIGEM FROM NF WHERE NUMERO = :VARNUMERO AND SERIE = :VARSERIE AND FILIAL = :VARFILIAL AND CLIFOR = :VARCLIFOR AND NF.ORIGEM = 'T' INTO :VARNFORIGEM;
             IF ((:VARGERARESTOQUE = 'S' AND :VARTIPOCFOPGERARDEVOLUCAO = 'N')
                /* talvez mudar aqui qdo fizer por item a devolucao. Caso onde devolve NF terceiros e nao estorna no item devolvido porque nao tem consumo. */
                OR (:VARGERARESTOQUE = 'S' AND :VARTIPOCFOPGERARDEVOLUCAO = 'S' AND :VARNFORIGEM = 'T')
                /* estoque improprio marcado devolucao mas sem vinculo */
                OR (:VARGERARESTOQUE = 'S' AND :VARTIPOCFOPGERARDEVOLUCAO = 'S' AND :VARNUMERO IS NULL AND :VARGERARESTOQUEIMPROPRIO = 'S')) THEN BEGIN
                FOR
                    SELECT ITEMNF.PRODUTO, ITEMNF.ITEM, (ITEMNF.QTDE - ITEMNF.QTDEDEVOLVIDO)
                    FROM ITEMNF
                    WHERE ITEMNF.NUMERO = NEW.NUMERO AND ITEMNF.FILIAL = NEW.FILIAL AND ITEMNF.SERIE = NEW.SERIE AND ITEMNF.ORIGEM = NEW.ORIGEM AND ITEMNF.CLIFOR = NEW.CLIFOR
                    INTO :VARPRODUTO, :VARITEM, :VARQUANTIDADE
                DO BEGIN
                   IF (:VARQUANTIDADE > 0) THEN BEGIN
                      IF (:VARCONTROLALOTEVALIDADE = 'S') THEN BEGIN
                          SELECT ESTOQUE.CONTROLARLOTEVALIDADE FROM ESTOQUE
                          WHERE ESTOQUE.PRODUTO = :VARPRODUTO
                          AND ESTOQUE.FILIAL = NEW.FILIAL
                          INTO :VARCONTROLARLOTEVALIDADE;
                          IF (:VARCONTROLARLOTEVALIDADE = 'S') THEN BEGIN
                              FOR
                                  SELECT VALIDADEITEMNF.LOTE, VALIDADEITEMNF.VALIDADE, VALIDADEITEMNF.QTDE, VALIDADEITEMNF.FABRICACAO
                                  FROM VALIDADEITEMNF
                                  WHERE VALIDADEITEMNF.NUMERO = NEW.NUMERO
                                  AND VALIDADEITEMNF.SERIE = NEW.SERIE
                                  AND VALIDADEITEMNF.FILIAL = NEW.FILIAL
                                  AND VALIDADEITEMNF.ORIGEM = NEW.ORIGEM
                                  AND VALIDADEITEMNF.CLIFOR = NEW.CLIFOR
                                  AND VALIDADEITEMNF.PRODUTO = :VARPRODUTO
                                  AND VALIDADEITEMNF.ITEM = :VARITEM
                                  INTO :VARLOTE, :VARVALIDADE, :VARQTDE, :VARFABRICACAO
                              DO BEGIN
                                 IF (:VARLOCALDESTINO IS NOT NULL ) THEN
                                     INSERT INTO MOVIMENTOESTOQUE(MOVIMENTOESTOQUE.FILIAL, MOVIMENTOESTOQUE.PRODUTO, MOVIMENTOESTOQUE.QTDE, MOVIMENTOESTOQUE.LOTE, MOVIMENTOESTOQUE.VALIDADE, MOVIMENTOESTOQUE.TIPO, MOVIMENTOESTOQUE.OBS,                    MOVIMENTOESTOQUE.FABRICACAO, MOVIMENTOESTOQUE.IMPROPRIO, MOVIMENTOESTOQUE.INDICADORTIPOESTOQUE, MOVIMENTOESTOQUE.CLIFOR, MOVIMENTOESTOQUE.LOCAL)
                                                           VALUES(NEW.FILIAL,              :VARPRODUTO,              (:VARQTDE*-1),              :VARLOTE,              :VARVALIDADE,              'C-NF',                'CANCELAMENTO NOTA FISCAL:'||NEW.NUMERO, :VARFABRICACAO, :VARGERARESTOQUEIMPROPRIO, :VARINDICADORTIPOESTOQUE, new.CLIFOR, :VARLOCALDESTINO);
                              
                                 INSERT INTO MOVIMENTOESTOQUE(MOVIMENTOESTOQUE.FILIAL, MOVIMENTOESTOQUE.PRODUTO, MOVIMENTOESTOQUE.QTDE, MOVIMENTOESTOQUE.LOTE, MOVIMENTOESTOQUE.VALIDADE, MOVIMENTOESTOQUE.TIPO, MOVIMENTOESTOQUE.OBS,                    MOVIMENTOESTOQUE.FABRICACAO, MOVIMENTOESTOQUE.IMPROPRIO, MOVIMENTOESTOQUE.INDICADORTIPOESTOQUE, MOVIMENTOESTOQUE.CLIFOR, MOVIMENTOESTOQUE.LOCAL)
                                                       VALUES(NEW.FILIAL,              :VARPRODUTO,              :VARQTDE,              :VARLOTE,              :VARVALIDADE,              'C-NF',                'CANCELAMENTO NOTA FISCAL:'||NEW.NUMERO, :VARFABRICACAO, :VARGERARESTOQUEIMPROPRIO, :VARINDICADORTIPOESTOQUE, new.CLIFOR, :VARLOCALORIGEM);
                              END
                          END ELSE BEGIN
                              IF (VARLOCALDESTINO IS NOT NULL) THEN
                                  INSERT INTO MOVIMENTOESTOQUE(MOVIMENTOESTOQUE.FILIAL, MOVIMENTOESTOQUE.PRODUTO, MOVIMENTOESTOQUE.QTDE, MOVIMENTOESTOQUE.TIPO, MOVIMENTOESTOQUE.OBS, MOVIMENTOESTOQUE.IMPROPRIO, MOVIMENTOESTOQUE.INDICADORTIPOESTOQUE, MOVIMENTOESTOQUE.CLIFOR, MOVIMENTOESTOQUE.LOCAL)
                                                         VALUES(NEW.FILIAL,              :VARPRODUTO,              (:VARQUANTIDADE*-1),        'C-NF',                'CANCELAMENTO NOTA FISCAL:'||NEW.NUMERO, :VARGERARESTOQUEIMPROPRIO, :VARINDICADORTIPOESTOQUE, NEW.CLIFOR, :VARLOCALDESTINO);
                          
                              INSERT INTO MOVIMENTOESTOQUE(MOVIMENTOESTOQUE.FILIAL, MOVIMENTOESTOQUE.PRODUTO, MOVIMENTOESTOQUE.QTDE, MOVIMENTOESTOQUE.TIPO, MOVIMENTOESTOQUE.OBS, MOVIMENTOESTOQUE.IMPROPRIO, MOVIMENTOESTOQUE.INDICADORTIPOESTOQUE, MOVIMENTOESTOQUE.CLIFOR, MOVIMENTOESTOQUE.LOCAL)
                                                     VALUES(NEW.FILIAL,              :VARPRODUTO,              :VARQUANTIDADE,        'C-NF',                'CANCELAMENTO NOTA FISCAL:'||NEW.NUMERO, :VARGERARESTOQUEIMPROPRIO, :VARINDICADORTIPOESTOQUE, NEW.CLIFOR, :VARLOCALORIGEM);
                          END
                      END ELSE BEGIN
                          IF (:VARLOCALDESTINO IS NOT NULL) THEN
                              INSERT INTO MOVIMENTOESTOQUE(MOVIMENTOESTOQUE.FILIAL, MOVIMENTOESTOQUE.PRODUTO, MOVIMENTOESTOQUE.QTDE, MOVIMENTOESTOQUE.TIPO, MOVIMENTOESTOQUE.OBS, MOVIMENTOESTOQUE.IMPROPRIO, MOVIMENTOESTOQUE.INDICADORTIPOESTOQUE, MOVIMENTOESTOQUE.CLIFOR, MOVIMENTOESTOQUE.LOCAL)
                                                    VALUES(NEW.FILIAL,              :VARPRODUTO,              (:VARQUANTIDADE*-1),        'C-NF',                'CANCELAMENTO NOTA FISCAL:'||NEW.NUMERO, :VARGERARESTOQUEIMPROPRIO, :VARINDICADORTIPOESTOQUE, NEW.CLIFOR, :VARLOCALDESTINO);
                      
                          INSERT INTO MOVIMENTOESTOQUE(MOVIMENTOESTOQUE.FILIAL, MOVIMENTOESTOQUE.PRODUTO, MOVIMENTOESTOQUE.QTDE, MOVIMENTOESTOQUE.TIPO, MOVIMENTOESTOQUE.OBS, MOVIMENTOESTOQUE.IMPROPRIO, MOVIMENTOESTOQUE.INDICADORTIPOESTOQUE, MOVIMENTOESTOQUE.CLIFOR, MOVIMENTOESTOQUE.LOCAL)
                                                VALUES(NEW.FILIAL,              :VARPRODUTO,              :VARQUANTIDADE,        'C-NF',                'CANCELAMENTO NOTA FISCAL:'||NEW.NUMERO, :VARGERARESTOQUEIMPROPRIO, :VARINDICADORTIPOESTOQUE, NEW.CLIFOR, :VARLOCALORIGEM);
                      END
                   END
                END
             END
             IF (:VARGERARFINANCEIRO = 'S') THEN BEGIN
                 /*Estornar Baixa pagamento vinculado*/
                 FOR
                    SELECT FINANCEIRONF.ORDEM, FINANCEIRONF.DATAEMISSAO
                    FROM FINANCEIRONF
                    WHERE FINANCEIRONF.NUMERO = NEW.NUMERO
                    AND FINANCEIRONF.SERIE = NEW.SERIE
                    AND FINANCEIRONF.FILIAL = NEW.FILIAL
                    AND FINANCEIRONF.ORIGEM = NEW.ORIGEM
                    AND FINANCEIRONF.CLIFOR = NEW.CLIFOR
                    INTO :VARORDEM, :VARDATAEMISSAO
                 DO BEGIN
                    UPDATE FINANCEIRO
                    SET FINANCEIRO.DATABAIXA = NULL,
                    FINANCEIRO.VALORBAIXA = NULL,
                    FINANCEIRO.DATAPGTO = NULL,
                    FINANCEIRO.DESCONTO = NULL,
                    FINANCEIRO.JURO = NULL,
                    FINANCEIRO.ACRESCIMO = NULL,
                    FINANCEIRO.TARIFA = NULL,
                    FINANCEIRO.PERCDESCONTO = NULL
                    WHERE FINANCEIRO.CLIFOR = NEW.CLIFOR
                    AND FINANCEIRO.ORDEM = :VARORDEM
                    AND FINANCEIRO.DATAEMISSAO = :VARDATAEMISSAO;
                 END
                 /*Estornar Financeiro*/
                 FOR
                    SELECT ORDEMNF.ORDEM
                    FROM ORDEMNF
                    WHERE ORDEMNF.NUMERO = NEW.NUMERO AND ORDEMNF.FILIAL = NEW.FILIAL
                    AND ORDEMNF.SERIE = NEW.SERIE AND ORDEMNF.ORIGEM = NEW.ORIGEM
                    AND ORDEMNF.CLIFOR = NEW.CLIFOR INTO :VARORDEM
                 DO BEGIN
                    SELECT FINANCEIRO.CAIXA FROM FINANCEIRO
                    WHERE FINANCEIRO.ORDEM = :VARORDEM
                    AND FINANCEIRO.CLIFOR = NEW.CLIFOR
                    AND FINANCEIRO.DATAEMISSAO = NEW.EMISSAO
                    INTO :VARCAIXA;
                    IF (:VARGERARCAIXA = 'S') THEN BEGIN
                       IF (:VARCAIXA > 0) THEN BEGIN
                          UPDATE FINANCEIRO SET FINANCEIRO.CAIXA = NULL
                          WHERE FINANCEIRO.ORDEM = :VARORDEM
                          AND FINANCEIRO.CLIFOR = NEW.CLIFOR
                          AND FINANCEIRO.DATAEMISSAO = NEW.EMISSAO
                          AND FINANCEIRO.CAIXA = :VARCAIXA;
                          DELETE FROM CAIXA
                          WHERE CAIXA.CODIGO = :VARCAIXA;
                       END
                    END
                    UPDATE FINANCEIRO
                    SET FINANCEIRO.CANCELADO = 'S'
                    WHERE FINANCEIRO.CLIFOR = NEW.CLIFOR
                    AND FINANCEIRO.ORDEM = :VARORDEM
                    AND FINANCEIRO.DOCUMENTO = NEW.NUMERO
                    AND FINANCEIRO.DATAEMISSAO = NEW.EMISSAO;
                 END
             END
           END
       END
    END
END^

SET TERM ; ^

