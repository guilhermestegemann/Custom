SET TERM ^ ;

CREATE OR ALTER trigger trigger_financeiro_romaneio for financeiro
active before insert position 0
AS
BEGIN
     /*IF (NEW.DOCUMENTO IS NOT NULL) THEN BEGIN
         SELECT MAX(ROMANEIO)
         FROM (
             SELECT CASE WHEN(IRN.ROMANEIO IS NULL) THEN IRP.ROMANEIO ELSE IRN.ROMANEIO END AS ROMANEIO
             FROM NF
             LEFT JOIN PEDIDO ON PEDIDO.NUMERO = NF.PEDIDO
                             AND PEDIDO.FILIAL = NF.FILIALPEDIDO
             LEFT JOIN ITEMROMANEIO IRP ON IRP.TIPO = 'P'
                                       AND IRP.NUMERO = PEDIDO.NUMERO
             LEFT JOIN ITEMROMANEIO IRN ON IRN.TIPO = 'N'
                                       AND IRN.NUMERO = NF.NUMERO
                                       AND IRN.SERIE = NF.SERIE
             WHERE ( NF.NUMERO = NEW.DOCUMENTO
                 AND NF.FILIAL = NEW.FILIAL
                 AND NF.CLIFOR = NEW.CLIFOR
                 AND NF.EMISSAO = NEW.DATAEMISSAO
                 AND NF.ORIGEM = 'P')
             AND ((IRP.ROMANEIO IS NOT NULL) OR (IRN.ROMANEIO IS NOT NULL))
         ) INTO NEW.ROMANEIO;
     END */
     IF (NEW.IDPEDIDO IS NOT NULL) THEN
     BEGIN
        SELECT MAX(ITEMROMANEIO.ROMANEIO)
        FROM ITEMROMANEIO
        WHERE ITEMROMANEIO.IDPEDIDO = NEW.IDPEDIDO
        INTO NEW.ROMANEIO;
     END
     ELSE IF (NEW.IDNF IS NOT NULL) THEN
     BEGIN
        SELECT MAX(ITEMROMANEIO.ROMANEIO)
        FROM ITEMROMANEIO
        WHERE ITEMROMANEIO.IDNF = NEW.IDNF
        INTO NEW.ROMANEIO;
     END
END^

SET TERM ; ^

SET TERM ^ ;

CREATE OR ALTER trigger trigger_itemromaneio_bi for itemromaneio
active before insert or update position 0
AS
    DECLARE VARIABLE EMISSAO DATE;
    DECLARE VARIABLE DATALIMITE DATE;
BEGIN
    IF ((NEW.ITEM IS NULL) OR (NEW.ITEM = 0)) THEN
        NEW.ITEM = GEN_ID(GENERATOR_ITEMROMANEIO,1);
    /*Limitar periodo para incluir documento no romaneio*/
    IF (NEW.TIPO = 'P') THEN
        SELECT PEDIDO.ID, PEDIDO.EMISSAO, ROMANEIO.DATA - FILIAL.FATURAMENTOPRAZOLIMITEEMISSAO
        FROM PEDIDO
        INNER JOIN ROMANEIO ON ROMANEIO.CODIGO = NEW.ROMANEIO
        INNER JOIN FILIAL ON FILIAL.CODIGO = ROMANEIO.FILIAL
        WHERE PEDIDO.NUMERO = NEW.NUMERO
        AND PEDIDO.FILIAL = ROMANEIO.FILIAL
        INTO NEW.IDPEDIDO, :EMISSAO, :DATALIMITE;

    IF (NEW.TIPO = 'N') THEN
        SELECT NF.ID, NF.EMISSAO, ROMANEIO.DATA - FILIAL.FATURAMENTOPRAZOLIMITEEMISSAO
        FROM NF
        INNER JOIN ROMANEIO ON ROMANEIO.CODIGO = NEW.ROMANEIO
        INNER JOIN FILIAL ON FILIAL.CODIGO = ROMANEIO.FILIAL
        WHERE NF.NUMERO = NEW.NUMERO
        AND NF.SERIE = NEW.SERIE
        AND NF.FILIAL = ROMANEIO.FILIAL
        AND NF.ORIGEM = 'P'
        INTO NEW.IDNF, :EMISSAO, :DATALIMITE;

    IF (:EMISSAO < :DATALIMITE) THEN
        EXCEPTION EXCEPTION_DATALIMITE;
END^

SET TERM ; ^